pipeline {
  agent {
    kubernetes {
      yamlFile 'deployment/pod-template.yaml'
      cloud 'kubernetes'
      defaultContainer 'maven'
    }
  }

  options {
    buildDiscarder(logRotator(daysToKeepStr: '7', numToKeepStr: '4'))
    disableConcurrentBuilds()
  }

  tools {
    maven 'maven'
  }

  environment {
    NEW_VERSION = "1.3.0"
  }
  
  stages {
    stage("git-clone") {
      steps {
        echo "Git clone from gitlab repository"
        git branch: 'dev', url: 'https://github.com/yoohojeong/jenkins-handson.git'
      }
    }

    stage("read properties") {
      steps {
        script {
          def props = readProperties  file:'deployment/pipeline.properties'
                
		      // Base Directory
          env['baseDir'] = props['baseDir']
          env['baseDeployDir'] = props['baseDeployDir']

		      // Docker Hub Info.
          env['tag'] = props['version']
          env['dockerRegistry'] = props['dockerRegistry']
          env['credentialRegistry']=props['credentialRegistry']
          env['image'] = props['image']
              
		      // Kubernetes
          env['deployment'] = props['deployment']
          env['config'] = props['config']
          env['service'] = props['service']
          env['ingress'] = props['ingress']
          env['selector_key'] = props['selector_key']
          env['selector_val'] = props['selector_val']
          env['namespace'] = props['namespace'] 
        }
      }
    }

    stage ('build') {
      steps {
        echo "Building the application..."   
        container('maven')  {
            sh 'mvn clean package -DskipTests'
          }
        }
    }    

    stage("inspect code") {
      steps {
        echo "inspecting the application..."
      }
    }
    
    stage ('build and push image') {
        steps {
            echo "build and push image..."
            container('buildah') {            
                sh '''#!/usr/bin/env bash
                    buildah bud --tls-verify=true \
                                --layers  -f deployment/Dockerfile \
                                -t ${image}:hello  .
                    buildah push --tls-verify=true ${image}:hello  
                '''
            }
        }
    }


		// Deploy App to Cluster in Kubernetes
		stage( "Deploy to Cluster" ) {
      steps {
        container('kubectl') {
          sh "kubectl apply -n ${namespace} -f ${deployment}"
          sh "sleep 5"
          sh "kubectl apply -n ${namespace} -f ${service}"
        }
      }
		}
  }
}
